1) bubble sort
time complexity-O(n2);
void bubble_sort( int A[ ], int n ) {
      int temp;
      for(int k = 0; k< n-1; k++) {
           // (n-k-1) is for ignoring comparisons of elements which have already been compared in earlier iterations

           for(int i = 0; i < n-k-1; i++) {
                  if(A[ i ] > A[ i+1] ) {
                       // here swapping of positions is being done.
                       temp = A[ i ];
                       A[ i ] = A[ i+1 ];
                       A[ i + 1] = temp ;
                   }
           }
     }
 }


2)Insertion sort-o(n2)
 vi v(5);
    rep(i, 5) cin >> v[i];
    for(int i=1;i<5;i++){
        int hole = i;//basically we are digging that element out and check it with its previous element;
        int temp = v[i];
        while (hole > 0 && v[hole - 1] > temp) {
            v[hole] = v[hole - 1];
            hole--;
        }
        v[hole] = temp;
       
    }
    
    3)Selection sort-o(n2)
    
    for (int i = 0; i < 4; i++) {
        int k = i;
        for (int j = i+1; j < 5; j++) {
            if (v[j] < v[k]) k = j;
        } swap(v[i], v[k]);
    }
