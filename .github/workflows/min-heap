void min_heapify (int Arr[ ] , int i, int N)
{
int left  = 2*i;
int right = 2*i+1;
int smallest;
if(left <= N and Arr[left] < Arr[ i ] )
     smallest = left;
else
    smallest = i;
if(right <= N and Arr[right] < Arr[smallest] )
    smallest = right;
if(smallest != i)
{
    swap (Arr[ i ], Arr[ smallest ]);
    min_heapify (Arr, smallest,N);
} 
}

void build_minheap (int Arr[ ]) 
{
    for( int i = N/2 ; i >= 1 ; i--)
    min_heapify (Arr, i);
}

//time complexity will be o(n)[amortizes time complexity]
